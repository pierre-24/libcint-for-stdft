name: Publish patched code

on:
  push:
    branches: [ main ]
    tags: [ '*' ]

permissions:
  contents: write

jobs:
  build:
    name: Patch and publish
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        libcint_ref: ['v6.1.2']
    env:
      REF: 'latest'

    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get -y install clisp meson ninja-build
      - name: change ref (tag)
        if: contains(github.ref, 'tags')
        run: |
            echo "REF=${{ github.ref_name }}" >> "$GITHUB_ENV"
      - name: Fetch & Generate
        run: |
           # clone and checkout
           git clone https://github.com/sunqm/libcint.git
           cd libcint/
           git checkout ${{ matrix.libcint_ref }}
           # generate
           ../patch.sh
           # create archive
           tar -czf libcint.tar.gz src/ include/ meson.build meson_options.txt
           # create wrap
           HASH=$(sha256sum libcint.tar.gz | cut -d " " -f 1 )
           sed -i "s/#REF#/${{ env.REF }}/g" libcint.wrap
           sed -i "s/#VERSION#/${{ matrix.libcint_ref }}/g" libcint.wrap
           sed -i "s/#HASH#/${HASH}/g" libcint.wrap
      - name: Test package
        run: |
            mkdir workdir
            cd workdir
            tar -xzf ../libcint/libcint.tar.gz
            meson setup _build
            meson compile -C _build
      - name: Upload archive
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: libcint/libcint.tar.gz
          asset_name: libcint_${{ matrix.libcint_ref }}.tar.gz
          tag: ${{ env.REF }}
          overwrite: true
      - name: Upload wrap
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: libcint/libcint.wrap
          asset_name: libcint_${{ matrix.libcint_ref }}.wrap
          tag: ${{ env.REF }}
          overwrite: true
